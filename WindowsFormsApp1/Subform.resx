<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIPEhUPEBIVFRUVFRcVFRUVFRcWFRUVFRgaFhUVFRcY
        HSggGBomGxUYITEhJSorLi4uFx8zODMsNygtLiv/2wBDAQoKCgUFBQ4FBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAIHAQMGCAUE/8QARxAAAQMCAAgIDAMHBAMBAAAAAQAC8AMRBAchMUFh
        gcEFBhJRcZGhsRciMjRCUnJzkrLR4RNU8SMkU2KCk8IzorPiFIPSFv/EABQBAQAAAAAAAAAAAAAAAAAA
        AAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwC8UREBERAREQEREBERAREQEREBERAR
        EQEREBERAREQEREBERAREQEREBEWHOAFzkAQZX4sM4Tp0gSSMmfLYDpMK5Hjzx8pYC3k5XPd5FJp8Z38
        zz6LZqVK8O8YcJw9167yGaKbcjAOjTt+vJC3+Gca2CUSWsqGo4aKLeUNY5Zs07DsXMYRjfeSfw8Hf/XU
        HcBv7LE1q1kk7C6QEk23ACwPC5X/ACzfjdJz5E8Llf8ALt/uGTmyqvxJOm3jFJk3bL+KgsHwuV/y7fjd
        Jz5FjwuV/wAu3+46Tmyiv5Mu/bbxkMk6L5CFg+Fyv+Xb8bpOgHHhcr/l2/3HSdNq/Mk7yEk3BwWB4XK/
        5dvxuk6L58Llf8u343SdNq+km/kpJu5QWB4XK/5dv9x0nQTkY3K/5dvxuk57gV8JJ3hoSTqsSFgeFyv+
        Xb/cMnNlTwuV/wAu343Sc+RV+JPtsv4oSZd+23jILEpY3ao8rBzb+SrY9oInNlX3uDMbuDuIFX8Slo8d
        nLb8TMvWAqdMlt2y/inDmyTZlAeneCuMdDCGh7HtLTmcxwczrGZfYBvlC8n8H4bWwV4qYPUcx2mxyH2h
        mPVuBtfiJjIFVwoVwGVDm/h1PZPoP1ZjovoC2kWrBsIbUbymn6g8xW1AREQEREBERAXC4xuODcBpZPGe
        48mmz1n6XO/lbMtl13C2FfhUyb2JyX5tJOwXXmfjVw07D8KfWv4jTyKQ/kGnbnlwHz8JwipXqOrVnFz3
        G5J7hzCezEST/wCsST/skn/UJAyTuaBkneY3kne4JJuASvJ9NnojF5Dv2+ksSfrt9IryDds9FBK8g3bP
        RWCZJr9IYky79vpITJO4hImSdxXkne2JMk7wvJO5wSvJP8l5J/jAukn+P66vB1ZlMV30nCm7yXkZDfNI
        4Pz3kne4DJO4RBknc0JJvIZvId+30ivIN2z0Vi8n02eiF5Dv2+kgzeQ79vpDJMk7jG8n02eiRkm8BkyT
        e2D26R16QZNDpEyTuKSfVoWriw47uef/ABq5vUaMh/isH+be0bbXBTeHAOGUEXC8l0cIfRe2tTNnMIc0
        6xuntejeIPDjcLoNcMzm8to5tD2bHX60HUoiICIiAiIgr3HBwuaGCVA02c4NpNy5Qah8b/aCR0KhaYsJ
        J0h1o48sJv8AhM0Gs6/9DbD5iqukm6wTkm7kpJv5UZJz67pJzarBISTuACSddyYiSddyQknVYAJSTZbI
        EmXftvlURJOvKsTR+m7ZkQTk/TZbIhknXlEZNO/blWDJOq4ITMk7wYudaSbC2LnSTbYixOIPEN9Z7a1d
        vjCxawjxafM6pzu5mwh+fiHxIfhL21q7MmRzKZzW0Pq8zeZuc9d+nxq4C3BsDqMaSf8AQJJ0k1SD0DJm
        Vn8HYAzB28hg1ucc7jzlVzjt82qdGD/8xQUs0yTtJyJJ1WAg2SdVgMiSddyQkJJ03ylJk3bLZFCSW2ZF
        maf137cqCRknTfKhknVcGEmjdsyLJknXYgJGSdxCSb+VEyTquCkm6wZMk7uTY2JjhUse+gTka9tRuptT
        xHjouGnpJ6TXEnb2679Hi5r8jDbetSff+mztwlrB6YRQpOu0HnAKmgIiICIiCisdnl0ve1e5k+9lW0nb
        2672Rju8ul72r8rZ9rqtbybOzUgnJ2dmqyTt7dd4Xk29utLybOzUglJ2dmi1siTpv26bqAMm3t03QGTV
        bZbRZBKTZstqsFmaf1z7b68qiDJlz7b67rFxbVsta3Va2y2pBLR+n6ZtltWRCcwFySbAC9yScgGm97a7
        67FYaC4hjQXOcQABckuJyAab3231q2cXPEAgitWA5Yzuzilztp6C+2Qu0Zgg/Ni94gOc9tasPHGXLlbR
        2ZnVLbArnwHA2UGBjBYDrJ0knSVLBcGbSaGMFgNG885W5AVW47/NqnRg/wDzFWkq0xv4E/CKT6NLk8tz
        aJAc4NuG1C45TqCCjGSdfbpvcJOjdosvst4oYZ6tP+6yfpqCyOKGGerT/ut+s6UHxhJnz7b68qxo/T9L
        W2W1ZF9r/wDIYZ6tP+6yTmUMI4rYXTY6oWNIaC53Ie1xAGUmwNzz8+1B8mTTn2315ViTZv0XULi2rZa1
        uq1tltSkTJrtttpsgkZOrs02sk7e3XeBMmq/boul5NnZqQTk7OzVb73ELz0e6q/L+vbrvz151/ft1r7/
        ABB89Huqvy/p2akHpzBfIb7I7ltWrBfIb7I7ltQEREBERBRGO7/Upe9q9zJ97KtLybe3WrJx4H9pS97V
        +VqrO8kzarhO8mzs1JeTb261G8m3t12xeTZ2arhO8mzs0WQGTXft03UQZJn12xeSbLIJ3k1dmqylQpvq
        uFOm0ue42a0Zyd3Sc2lMDwapXeKVFhc85gNHOXHQBznvyK7cXfEBtFoqVMtx4z8xf/Kzmp69KD82LnF+
        Kdq1TK7M547WUtWgu6lbFCi2m0MYAGgWAClTYGgNaAAMgAzAKSAiIgKL6YOcA9IUkQa/wGeq3qCfgM9V
        vUFsRBr/AAGeq3qC5vj5TaMFqEAD9nU0D1CuoXM8f/NX+7qfIUHmCk7IJ98/brU7yat+i600T4o6N0/R
        bLyTbZBImTZ2abJeTb261C8k7bLyTNquE7ybOzUvv8QT++j3VX5f17da568m3t12+/xAP76PdVflnZqu
        HqDBfIb7I7ltWrBfIb7I7ltQEREBERBQuPE/tKXvavysVZXknbazMeX+pS97V+VqrG8k3hK8k7LryTtt
        G8k3LyTeEryTsv8Ao4NwGrhVQUqLbuOcnI1o0ucdAmfIJ8EcF1cMqfhUrc7nHyWN0uP0091+8QeItPBK
        Yc5ufL43l1D61TmHM3Qg/Li84hMwemHvF72LnEWdVPPb0afMOtWQ0WyDMshEBERAREQEREBERAXM4wPN
        anu6nyFdMuZxgea1Pd1PkKDy3ROQSToU7yTvGmicg6JP1Wy8k7iEryTsuvJO20byTvC8k3hK8k7L9DxA
        P76PdVflkvbnLyTd0OL8/vo91V+WTOHqPBfIb7I7ltWrBfIb7I7ltQEREBERBQePP/Upe9q/K1VfeSbr
        Qx6eXS99V+Vqq28k3hK8k35vJN0LyTcvJN4fX4t8PPwCt+K1oc0gB7cxLb3yHQRnlz6O4ncbaWHUmua8
        G+QHMb+q4aHLy1JPt9Li9w9WwCp+JSNwfLpk+K8bjr79IevEXG8RuOlLDqTTytWXymn1H69eldkgIiIC
        IiAiIgIiIC5nGD5pU93U+QrplzGMHzSp7up8hQeV6RyDok/RTvJO8aqRyCSdKneSdyCV5J3FeSbo3km5
        eSbwleSb+ixen99HuqvyyZubvJN3R4vPPh7mr8smcPU2C+Q32R3LatWC+Q32R3LagIiICIiCgse3l0vf
        Vflaqskn2tPHv5dL31X5WqqpJvQTvJN+LyTdiSbkkm9BKSffCwiD93A3DFbAqgrUHWPpNOVrxzOG/OvQ
        /EDj1Sw2kLutawc0nxqZ5nc7eYrzSv1cF8I1cEqivQdyXjqcNLXDSDMuVB7ICKucXfH+nhlMNcbOaBym
        E3LNY9ZmtWK1wIuMoKDKIiAiIgIiIC5nGB5rU93U+QrplzOMDzWp7up8hQeU6RyDok/RTkn1WqlmCmgl
        eSb8ST7YSSb0EpJ9+kxdefD3NX5VzMk3LpcXHnw9zV+VB6nwXyG+yO5bVqwXyG+yO5bUBERAREQUFj48
        ql76r8rVVMk3K1sfPlUvfVflYqnuglJN6STcoyTcl5J2oJSTeijdZugyiis3Qb8Bwypg9Rtai8se03BH
        aCNIOkHOr8xa4w2YW38N/ivA8enfN/PT526tC89qeD130ntq03Fr2m7XDIQUHtCm8OAc03BzFSVRYssY
        7cItQrENq2yszB9s76evSWq2qNVrwHNNwcxQTVf40uH6vB9N9elYlraVmu8nx6haT29isBVTj181q9GD
        /wDKUHA+F7Df4VLt+ieF3Dv4VLt+ir4IgsHwu4b/AAqXb9F+XhPGhhuEUn0Syk0PaWlwBLgHZDbmK4hE
        GQsqKIJJJNyxdYvJO1BKSb10+Lbz4e5q/KuWkm5dRi18+HuavyoPVGC+Q32R3LatWC+Q32R3LagIiICI
        iCicftAj8J2j8Z/+5gt8pVPr0Ljw4JNXBKj2i5Zyaw/9Zs/qY4nYvPQQEREBERAREQEREEmPLHB7SWua
        QWuGQgjMQVduLLGT+KRg2EECr1Nq20t5n6tKpBASCCCQQbgjIQRmIKD2jg2ENqNDmm4PZqKq/Hr5pV6M
        H/5ivg4scZJLm4NhTgKmQNecjaup3M/XpX2cdWEtq4FVe3NbB9h/FOQoKDCIEQFlYRAWVhEBERAXXYrq
        Rdh1xopPB/qs0LkVZ+I7gs1KtSsRkL2Uh/T+0qdQ5PWg9CUG2a0cwA7FNEQEREBERB8vjFgIrUXC17A5
        OdpFnDq7l5R4zcDuwHCX4OfJBvTPrUzlad2xewlVmNfiP/5dPl0gBUbc0joN/KpO1HODzoPPiKVWm5ji
        x7S1zTZzTkIIzgz7xkn2AiIgIiICIiAiIgL7XCHGrC8IwduCVanKptIObx3cnK0Odpse5fFkn2ST7gRE
        QEREBERAREJkm4JUqTnuDGDlOcQ1oGknIAvTmK/i8MDwdo9RvJv61Rx5VV/XkHsqtcU3Eh73jCqzbOI/
        ZNPoMOeq4aCczR0lX9g1BtNoY0WDRYINiIiAiIgIiIC116LXtLXC4OcLYiCpcY+LZuE/tqZ5FQZqlvFc
        NDawHY8bVSHC3BNfA3/h4RTLDoPou1tdmM2+yCL5CvgcNcU6GEtLS1tjnY5odTOw5tiDyTJPsV0cOYmW
        El1A1KWptq1PYHWeOsrlcJxU4Uw2bWpnpa9p7RZBwKLtfBjhvrUviP0TwY4b61L4j9EHFST6Iu18GOG+
        tS+I/RPBjhvrUviP0QcUkk+3a+DHDfWpfEfongxw31qXxH6IOKkn3ST7dr4McN9al8R+ieDHDfWpfEfo
        g4pF2vgxw31qXxH6J4McN9al8R+iDikXa+DHDfWpfEfongxw31qXxH6IOKRdzRxW4W7yqlJux7u5q6Hg
        jE0XEGtUqv1MaKTdr33NugXQVTg9F9Vwp02l7jma0Ek7ArT4gYsXue2thQDnDKKedlM+tVPpO5mDarN4
        ucQMHwQWaxrBpDL8p3t1HeM7sXXUKLaYDWNDQNAQaODeD2YO3ktyk+U453GaF+tEQEREBERAREQEREBE
        RAWCFlEEeSOYJyBzBSRBHkDmCcgcwUkQR5A5gnIHMFJEEeQOYJyBzBSRBHkDmCcgcwUkQR5A5gnIHMFJ
        EGA0cyyiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiD//Z
</value>
  </data>
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMHBhMSBxIWFhUVEBcZERUXEhkbGBIVFRUXFxcaGRcY
        HSggGBomHRcVIjEhJSkrLi4uGh8zODMsNygtLiv/2wBDAQoKCgUFBQ4FBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCADhAOEDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAQMEAgf/xAA9EAACAQIDAwYMBAYDAAAAAAAAAQIDEQQFMRIhURVB
        coGx0QYTFCIzNFNhcZGSoTI1UsIjNkJGweEksvH/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/8QAFBEBAAAA
        AAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8A+qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAxJ7MW3zIj+XKH639Eu4CRBHcuUP1v6JdxIRltxTjzrcBkAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAeK/oJdF9hRFoXuv6CXRfYURaAHoXrDerx6C7EUV6F6w3q8eguxAbAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAB4r+gl0X2FEWhe6/oJdF9hRFoAehesN6vHoLsRRXoXrDerx6C7EBsAAAAAAA
        AAAAAAAAAAAAAAAAAAAAN2QMT/A/gwI1Z9R4y+lmeXaPGX0sqa0AFs5do8ZfSxy7R4y+llTAFpq55RlS
        aTlvi/6XwKsAALTRzujClFSb3RSfmvmVirAC2cu0eMvpY5do8ZfSypgC2cu0eMvpZjl2jxl9LKoZQF9i
        9qN0DzS9FHorsPQAAAAAAAAAAAAAAAAAAADEvwv4GQBTVlVa3o5fbvM8lVvZy+3eXIAU3kqt7OX27xyV
        W9nL7d5cgBTHldaKu6cvscZe6/oJdF9hRFoAOyOWVpRvGm7NbtDjehesN6vHoLsQFS5Krezl9u8clVvZ
        y+3eXIAU3kqt7OX27xyVW9nL7FyMAeaatTV+C7D0AAAAAAAAAAAAAAAAAAAAAAAAAAAAHiv6CXRfYURa
        F7r+gl0X2FEWgB6F6w3q8eguxFFehesN6vHoLsQGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeK/oJ
        dF9hRFoXysr0ZJfpfYU5ZZWt6OXyA5HoXrDerx6C7EVDkyt7OXyLhQWzQin+ldgHsAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABu2o1AAAABfeAAGmoTvoABkxfeABkwA
        AAAAAAAAAAAAAAAAAAAAAADE5qEG5aJXfUBCZ43jMdToU/jL427k/mb/AAcxHjMI6c9YO3U333OfI35R
        jKtaq1vdo3fH/VkeZzWAz/ai1s1Nd+m1a/3VwLAaKmLp052nOKfC6ObPMS8LgG6bs27J8L6/ZGjAZNT8
        kTxCvKUU276XXMBpnv8AChdFf9CbnNU43m0lztsruEw3kfhCoXukns/BxNuJjynnXi5t7EFvS57f7YEh
        jsTCvl9VUZJ/w5Xs/czX4O/lcelLtNGaZRCGElLDLZlGLe56pLffqN/g7+Vx6Uu1gSRB/wB09X7ScIP+
        6er9oE26iU0m1d6K+99Rp8sp+M2duN+F0Q+d03VzanGDs5Rtfgm3c25llFKjl8nSTTirp31txAl61eNB
        fxpJfFmadWNaN6TTXFMhcoy+OMwyqY28npG70jHcecvpeRZ/OnSfmuOnUpICcqVFTjeo0lxbsa6eMp1J
        WhOLfC5H4rLnisx28Y14tLzVtW/8OXN8Lh4YVui4qa/ClLXfpYCwmirioUp2qzinwuRrxsqPg7Gd/Oa2
        U+tq/wAkMtyem8KpYlbUpK7u9LgS3jY3S2lv03rf8OJ6b2VeRW1hPIs+pxi243vG/Mnfcbc2q+WZoqM5
        bMI2ct+rtf8AygJmGMpznaE4t8Lo3kLXwGGnQapyinbc1Pff57zb4PYp4jCuNV3cHa/uenYwJQAAAAAA
        AAi/CLE+JwOzHWbt1avu6yUOXFZfDF14yrX83RX3a34AcGGyGm8PHx21tWW1v52aM1yaGHwblh73Wt3f
        dz/4LAYnBVINT0as+sCBx9R4/IYzW9xktvq3N/dPrJfL8QsTg4yg1+FX9ztvuecFgIYOnJUrtS1UndaW
        OSeQ03O9OUop6pPvA5o11iPCVOm7pK1+Nou/3ZmlJYPwin47cprc3pvs1/lEhh8qp4evGdFNOKslfd1+
        82Y3AwxsEq600a1QHnNsQqGXz23rFqK4tqxo8HfyuPSl2mKWR04v+I5S3WV3pfcduDw0cJQUKV7X5973
        gbiD/unq/aThzeQR8t8bv2vju4cAI/MP5go/DvO7Nvyyp0Ge6uCjVxcak77UdN+75G3EUViKLjU0as7A
        cWQflcfi+05YfzS+h+xErhMPHC0FCley4via1gYrHeNV9q1td2ltOoCGhDlXN5xxUmlG+zG+tnbd2m3N
        cFQwWCewltuyjd3eu87cZlEMVW27uMudxev+zFLJqcU/GbUm1a8nvV+HvA4J0XX8F4bH9LcvlKSfaSeV
        YuNfAxs1dRSkr6NKwko5Vl78WnKMeZtXs3v6t7OKjl2Hx0PGUrxvrFSSt8VvsBqr4lYnwip+Kd1Hdf37
        2zXjqUIZ/wD8xeZNLXT8KXajNClCWfQWCXmwW9rik7u/PvZN4zBwxlPZrq/B33r4MDkrZZh6NJyqRSSV
        77T7xkkqdSjJ4Sm4K6Tu73a4fM1rIKd/PlNrmVyUo0lRpqNJWS0QHoAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAACS2laXWRlTIaM5Xs17lLd9yTAGjCYOGDhahG19XzvrN4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/2Q==
</value>
  </data>
</root>