<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>